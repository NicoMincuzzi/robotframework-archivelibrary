# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/cache@v2
        id: poetry-cache
        with:
          path: ~/.poetry
          key: ${{runner.os}}-poetry-${{hashFiles('**/poetry.lock')}}
          restore-keys: ${{runner.os}}-poetry-
      - uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: 1.1.5
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
          poetry config cache-dir ~/.poetry
          poetry config virtualenvs.path ~/.poetry/venv
      - name: Install dependencies
        run: poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with Robot Framework and coverage
        run: |
          poetry run coverage erase
          poetry run coverage run --branch --source ArchiveLibrary/ -m robot --loglevel trace:info --pythonpath ArchiveLibrary/ --outputdir ./tests-report --consolecolors ansi atests
      - name: Test with pytest
        run: |
          poetry run coverage run --branch --source ArchiveLibrary/ -m pytest --verbose utests/
